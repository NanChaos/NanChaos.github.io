<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Docker部署Minio与SpringBoot集成</title>
    <url>/2024/02/20/Docker%E9%83%A8%E7%BD%B2Minio%E4%B8%8ESpringBoot%E9%9B%86%E6%88%90/</url>
    <content><![CDATA[<h2 id="部署Minio"><a href="#部署Minio" class="headerlink" title="部署Minio"></a>部署Minio</h2><p>本文选择使用Docker部署，省略Docker的安装步骤，注意替换</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d -p 9000:9000 -p 9001:9001 </span><br><span class="line">--name minio \</span><br><span class="line">-e &quot;MINIO_SERVER_URL=http://192.168.0.1:9001&quot; \</span><br><span class="line">-e &quot;MINIO_ROOT_USER=admin&quot; \</span><br><span class="line">-e &quot;MINIO_ROOT_PASSWORD=1234567890&quot; \</span><br><span class="line">-v /nanchaos/env/docker-container/minio/data:/data \</span><br><span class="line">-v /nanchaos/env/docker-container/minio/config:/root/.minio minio/minio server /data --console-address &quot;:9000&quot; --address &quot;:9001&quot;</span><br></pre></td></tr></table></figure>
<p>成功后访问<a href="http://192.168.0.1:9000/">http://192.168.0.1:9000</a>即可<br><img src="http://110.42.134.48:9001/chaos-oss/20240220/minio_login.png" alt="minio login"></p>
<h2 id="SpringBoot集成"><a href="#SpringBoot集成" class="headerlink" title="SpringBoot集成"></a>SpringBoot集成</h2><h3 id="maven"><a href="#maven" class="headerlink" title="maven"></a>maven</h3><p>添加依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.minio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>minio<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--可选--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--可选--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.squareup.okhttp3<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>okhttp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--可选--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.83<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="生成bucket等"><a href="#生成bucket等" class="headerlink" title="生成bucket等"></a>生成bucket等</h3><p>前往控制台<a href="http://192.168.0.1:9000/">http://192.168.0.1:9000</a>生成bucket、accessKey与secretKey<br><img src="http://110.42.134.48:9001/chaos-oss/20240220/add_bucket_and_key.png" alt="minio bucket"></p>
<h3 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">minio:</span></span><br><span class="line">  <span class="attr">accessKey:</span> <span class="string">替换为刚刚生成的accessKey</span></span><br><span class="line">  <span class="attr">secretKey:</span> <span class="string">替换为刚刚生成的secretKey</span></span><br><span class="line">  <span class="attr">endpoint:</span> <span class="string">http://192.168.0.1:9001/</span></span><br><span class="line">  <span class="attr">bucketName:</span> <span class="string">替换为刚刚生成的bucket</span></span><br></pre></td></tr></table></figure>
<h3 id="Java-Code"><a href="#Java-Code" class="headerlink" title="Java Code"></a>Java Code</h3><h4 id="minio-configuration"><a href="#minio-configuration" class="headerlink" title="minio configuration"></a>minio configuration</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nanchaos.chaososs.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.minio.MinioClient;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * minio config</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> nanchaos</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2024/2/19</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@time</span> 19:33</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MinioConfiguration</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 访问地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.endpoint&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * accessKey</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.accessKey&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessKey;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * secretKey</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.secretKey&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String secretKey;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认存储桶</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.bucketName&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String bucketName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MinioClient <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> MinioClient.builder()</span><br><span class="line">                .endpoint(endpoint)</span><br><span class="line">                .credentials(accessKey, secretKey)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="minio-util"><a href="#minio-util" class="headerlink" title="minio util"></a>minio util</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.nanchaos.chaososs.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.nanchaos.chaososs.common.constants.Constant;</span><br><span class="line"><span class="keyword">import</span> com.nanchaos.chaososs.common.enums.ErrorCodeEnum;</span><br><span class="line"><span class="keyword">import</span> com.nanchaos.chaososs.common.enums.ViewContentTypeEnum;</span><br><span class="line"><span class="keyword">import</span> com.nanchaos.chaososs.common.exception.OssException;</span><br><span class="line"><span class="keyword">import</span> com.nanchaos.chaososs.config.MinioConfiguration;</span><br><span class="line"><span class="keyword">import</span> io.minio.MinioClient;</span><br><span class="line"><span class="keyword">import</span> io.minio.PutObjectArgs;</span><br><span class="line"><span class="keyword">import</span> io.minio.RemoveObjectArgs;</span><br><span class="line"><span class="keyword">import</span> io.minio.errors.*;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.exception.ExceptionUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.security.InvalidKeyException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MinIO工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MinioUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> MinioClient minioClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> MinioConfiguration minioConfiguration;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMinioClient</span><span class="params">(MinioClient minioClient)</span> &#123;</span><br><span class="line">        MinioUtil.minioClient = minioClient;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMinioConfiguration</span><span class="params">(MinioConfiguration minioConfiguration)</span> &#123;</span><br><span class="line">        MinioUtil.minioConfiguration = minioConfiguration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputStream stream</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> extName     文件原始拓展名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filename    自定义文件名，如果不传会使用UUID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">upload</span><span class="params">(InputStream inputStream, String extName, String filename)</span> &#123;</span><br><span class="line">        Assert.isTrue(StringUtils.isNotEmpty(extName), <span class="string">&quot;extName不可为空&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(filename))</span><br><span class="line">            filename = UUID.randomUUID().toString().replace(Constant.SEPARATOR_DASH, Constant.EMPTY);</span><br><span class="line">        <span class="type">String</span> <span class="variable">objectName</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyyMMdd/&quot;</span>).format(<span class="keyword">new</span> <span class="title class_">Date</span>()) + filename + Constant.SEPARATOR_DOT + extName;</span><br><span class="line">        String path;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            path = baseUpload(minioConfiguration.getBucketName(), objectName, inputStream, ViewContentTypeEnum.getContentType(extName));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;MinioUtil upload event failure, caused by: &#123;&#125;&quot;</span>, ExceptionUtils.getStackTrace(e));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">OssException</span>(ErrorCodeEnum.SYSTEM_EXCEPTION, String.format(<span class="string">&quot;上传失败: %s&quot;</span>, ExceptionUtils.getRootCauseMessage(e)));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(path);</span><br><span class="line">        <span class="keyword">return</span> path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">baseUpload</span><span class="params">(String bucketName, String objectName, InputStream inputStream, String contentType)</span> <span class="keyword">throws</span> ServerException, InsufficientDataException, ErrorResponseException, IOException, NoSuchAlgorithmException, InvalidKeyException, InvalidResponseException, XmlParserException, InternalException &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">PutObjectArgs</span> <span class="variable">param</span> <span class="operator">=</span> PutObjectArgs.builder().bucket(bucketName)</span><br><span class="line">                <span class="comment">// objectName 可以理解为路径，如20240210/aaa.jpg, 即为存储到$&#123;bucket&#125;下的20240210的文件下，重命名为aaa.jpg</span></span><br><span class="line">                .object(objectName)</span><br><span class="line">                <span class="comment">// 建议设置，默认为application/octet-stream 该类型上传后是不能预览的，会直接发起下载</span></span><br><span class="line">                .contentType(contentType)</span><br><span class="line">                .stream(inputStream, inputStream.available(), -<span class="number">1</span>)</span><br><span class="line">                .build();</span><br><span class="line">        minioClient.putObject(param);</span><br><span class="line">        stringBuilder.append(minioConfiguration.getEndpoint()).append(minioConfiguration.getBucketName()).append(Constant.SEPARATOR_SLASH).append(objectName);</span><br><span class="line">        <span class="keyword">return</span> stringBuilder.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">removeFile</span><span class="params">(String bucketName, String objectName)</span> <span class="keyword">throws</span> ServerException, InsufficientDataException, ErrorResponseException, IOException, NoSuchAlgorithmException, InvalidKeyException, InvalidResponseException, XmlParserException, InternalException &#123;</span><br><span class="line">        <span class="type">RemoveObjectArgs</span> <span class="variable">param</span> <span class="operator">=</span> RemoveObjectArgs.builder().bucket(bucketName).object(objectName).build();</span><br><span class="line">        minioClient.removeObject(param);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>SpringBoot</tag>
        <tag>minio</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo使用与记录</title>
    <url>/2024/02/20/Hexo%E4%BD%BF%E7%94%A8%E4%B8%8E%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>记录下HEXO的搭建过程，以及部分插件的使用，希望能帮助到有需要的人</p>
<blockquote>
<p><strong>有一点，切勿急着去设置项目的origin，这个可以在弄明白之后再设置！！！</strong></p>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="install-git"><a href="#install-git" class="headerlink" title="install git"></a>install git</h3><p>网络上有现成的，略… (Mac 推荐Xcode)</p>
<h3 id="install-node"><a href="#install-node" class="headerlink" title="install node"></a>install node</h3><p>网络上有现成的，略…(Mac 推荐Homebrew)</p>
<h3 id="Hexo安装与项目创建"><a href="#Hexo安装与项目创建" class="headerlink" title="Hexo安装与项目创建"></a>Hexo安装与项目创建</h3><h4 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h4><p>没什么多说的，执行下就可以</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h4 id="初始化blog项目"><a href="#初始化blog项目" class="headerlink" title="初始化blog项目"></a>初始化blog项目</h4><p>找一个空目录，用于存放blog的，初始化blog项目</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>初始化成功后，运行下方命令，可于本地运行查看</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>结果如下，访问<a href="http://localhost:4000/">http://localhost:4000/</a>即可查看，这里就不截图了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>
<p><img src="/./../images/execute_hexo_s_result.png" alt="hexo s执行结果"></p>
<h3 id="Github相关操作"><a href="#Github相关操作" class="headerlink" title="Github相关操作"></a>Github相关操作</h3><p>Hexo项目创建成功后，需要的就是创建github项目，访问<a href="https://www.github.com/">Github</a></p>
<h4 id="1-创建仓库"><a href="#1-创建仓库" class="headerlink" title="1. 创建仓库"></a>1. 创建仓库</h4><p>创建名称为<code>$&#123;yourAccountName&#125;.github.io</code>的仓库(区分大小写),如果你的账户名是<code>JamesGosling</code>,那仓库名就是<code>JamesGosling.github.io</code><br><img src="/./../images/github_add_new_repo.png" alt="add new repo"></p>
<h3 id="关联Github-仓库与Hexo项目"><a href="#关联Github-仓库与Hexo项目" class="headerlink" title="关联Github 仓库与Hexo项目"></a>关联Github 仓库与Hexo项目</h3><h4 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h4><p>在项目目录中执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<h4 id="Hexo配置repo"><a href="#Hexo配置repo" class="headerlink" title="Hexo配置repo"></a>Hexo配置repo</h4><p>修改<code>_config.yml</code>，注意替换为自己的</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:NanChaos/NanChaos.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>
<h5 id="repo"><a href="#repo" class="headerlink" title="repo"></a>repo</h5><p>repo是http还是SSH的，无所谓，都可以</p>
<h5 id="branch"><a href="#branch" class="headerlink" title="branch:"></a>branch:</h5><p>这里的branch是指将项目打包后所在的分支（每次都会强制覆盖），GitHub Pages使用的又是一个分支，这两个是独立的，所以二者要统一。</p>
<p>有些老的教程这里写的是master，是因为旧版Github的默认分支是master，但是现在N年前已经改掉了，目前GitHub的默认分支是<code>main</code>，如果不确定，可以自己再确认下,<code>repo-&gt;settings-&gt;pages</code>。</p>
<p>最终用哪个分支，取决于自己，但是就一点，两者要保持一致，如果害怕出错，Github上的是什么，<code>_config.yml</code>中就填什么。<br><img src="/./../images/github_pages_branch.png" alt="GithubPages"></p>
<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>deploy项目，<code>GitHub-&gt;your repo-&gt;Actions</code>会有记录，若一切都没问题，就可以访问了，地址如图中所示</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p><img src="/./../images/github_action.png" alt="GitHub Action"><br><img src="/./../images/github_action_deploy.png" alt="GitHub Action Deploy Address"></p>
<h3 id="添加域名（可跳过）"><a href="#添加域名（可跳过）" class="headerlink" title="添加域名（可跳过）"></a>添加域名（可跳过）</h3><p>要花钱的地方来了</p>
<h4 id="购买域名与DNS服务"><a href="#购买域名与DNS服务" class="headerlink" title="购买域名与DNS服务"></a>购买域名与DNS服务</h4><p>如果需要自定义域名访问，就需要购买域名，比如本站使用的<a href="http://nanchaos.com/">http://nanchaos.com</a>，不仅需要购买域名还需要购买DNS解析服务，选择自己钟爱的云服务厂商，本站使用的是腾讯云，（后面发现好像阿里云的DNS解析服务更便宜些，阿里云49，腾讯云99😭😭😭，购买时间为2024.2.19，看到文章时可能价格有变动，自行选择即可）<br>在项目根目录</p>
<h4 id="DNS解析"><a href="#DNS解析" class="headerlink" title="DNS解析"></a>DNS解析</h4><p>1.ping域名，获取ip地址<br>ping一下自己项目的域名，获取ip地址，比如我获取的ip就是<code>185.199.109.153</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ping nanchaos.github.com</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nanchaos@nanchaosdeMacBook-Pro ~ % ping nanchaos.github.com</span><br><span class="line">PING github.github.io (185.199.109.153): 56 data bytes</span><br><span class="line">64 bytes from 185.199.109.153: icmp_seq=0 ttl=48 time=82.240 ms</span><br><span class="line">64 bytes from 185.199.109.153: icmp_seq=1 ttl=48 time=82.856 ms</span><br><span class="line">64 bytes from 185.199.109.153: icmp_seq=2 ttl=48 time=82.438 ms</span><br><span class="line">64 bytes from 185.199.109.153: icmp_seq=3 ttl=48 time=82.084 ms</span><br><span class="line">64 bytes from 185.199.109.153: icmp_seq=4 ttl=48 time=83.008 ms</span><br><span class="line">64 bytes from 185.199.109.153: icmp_seq=5 ttl=48 time=82.032 ms</span><br><span class="line">64 bytes from 185.199.109.153: icmp_seq=6 ttl=48 time=82.575 ms</span><br><span class="line">64 bytes from 185.199.109.153: icmp_seq=7 ttl=48 time=81.910 ms</span><br><span class="line">^C</span><br><span class="line">--- github.github.io ping statistics ---</span><br><span class="line">8 packets transmitted, 8 packets received, 0.0% packet loss</span><br><span class="line">round-trip min/avg/max/stddev = 81.910/82.393/83.008/0.373 ms</span><br><span class="line">nanchaos@nanchaosdeMacBook-Pro ~ % </span><br></pre></td></tr></table></figure>

<p>2.配置DNS解析<br>配置两条记录，分别是A类型以及CNAME类型，照抄吧，注意替换自己的域名以及地址，不过多叙述</p>
<ul>
<li>A类型对应的记录值是ping获取到的ip</li>
<li>CNAME对应的记录值是对应github项目的地址</li>
</ul>
<p><img src="/./../images/tecent_cloud_dns_config.png" alt="DNS Config"></p>
<h4 id="CNAME"><a href="#CNAME" class="headerlink" title="CNAME"></a>CNAME</h4><p>在项目根目录创建名为<code>CNAME</code>的文件，内容填写为自己购买的域名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www.nanchaos.com</span><br></pre></td></tr></table></figure>
<p>接下来就可以尝试访问自己购买的域名了</p>
<h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><p>TODO 有空再写。。。</p>
<p>以下是自己的一些个性化配置，注意甄别，是否适用于自己。</p>
<h3 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h3><p>本站使用的注意是<a href="https://github.com/jerryc127/hexo-theme-butterfly?tab=readme-ov-file">Butterfly</a>，首先感谢大佬的开发，其次，大佬的文章已经很详细的讲解了配置细节</p>
<h4 id="获取主题"><a href="#获取主题" class="headerlink" title="获取主题"></a>获取主题</h4><p>项目根目录执行，获取主题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure>
<h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><p>修改<code>_config.yml</code>中的<code>theme</code>为<code>butterfly</code>，此时本地运行的话还缺少配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure>

<h4 id="增加Butterfly配置"><a href="#增加Butterfly配置" class="headerlink" title="增加Butterfly配置"></a>增加Butterfly配置</h4><p>在项目根目录新建名为<code>_config.butterfly.yml</code>的文件，将<code>themes/butterfly/_config.yml</code>文件中的内容全部复制到<code>_config.butterfly.yml</code>文件中，此时就可以执行<code>hexo s</code>本地查看效果了，其余的个性化配置请参考<a href="https://butterfly.js.org/posts/21cfbf15/">大佬的blog</a>，都有详细说明。</p>
<h3 id="添加搜索"><a href="#添加搜索" class="headerlink" title="添加搜索"></a>添加搜索</h3><h4 id="添加模块"><a href="#添加模块" class="headerlink" title="添加模块"></a>添加模块</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<h4 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改_config.yml"></a>修改<code>_config.yml</code></h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<h4 id="修改-config-butterfly-yml"><a href="#修改-config-butterfly-yml" class="headerlink" title="修改_config.butterfly.yml"></a>修改<code>_config.butterfly.yml</code></h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>效果如图所示</p>
]]></content>
      <tags>
        <tag>HEXO</tag>
        <tag>教程</tag>
        <tag>butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/02/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
